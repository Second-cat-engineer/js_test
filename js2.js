
/*// может ли функция вернуть функцию? И если да, то как потом использовать функцию,
// которую вернула другая функция? Приведите пример.
function first() {
    return 'first';
}

function second() {
    return first;
}
console.log(second()())*/


/*// Представьте, что вы видите такой код
// let func = function (x, y = 100) { ... };
// Для начала попробуйте догадаться, что значит запись второго аргумента. Потом сверьтесь с документацией и напишите - угадали ли?
// Придумайте свой вариант полезной функции, использующей такую запись.
let func = function (x, y = 100) {
    return x + y;
}
console.log(func(10, 10))*/


/*// А теперь попробуйте на основе того простого факта, что n! = n * (n-1)!
// упростить код, сделав функцию рекурсивной
// (то есть такой, которая когда нужно вызывает сама себя)
console.time('factorial');
function factorial(n) {
    if (n == 1) {
        return 1;
    }
   return n * factorial(n-1);
}
console.log(factorial(4))
console.timeEnd('factorial');*/

/*// Напишите функцию, которая вычисляет факториал натурального числа
// (освежите в памяти, что такое "факториал", к примеру, в Википедии).
// В первом варианте этой функции пользоваться рекурсией запрещено - функция
// не должна вызывать сама себя!
function factorial(n) {
    if (n <= 0) {
        return 0;
    }
    let i = 1;
    let sum = 1;
    while (i <= n) {
        sum = sum * i;
        i++;
    }
    return sum;
}
console.log(factorial(0));*/

//"use strict";
/*

age = 43;
console.log(age)*/
